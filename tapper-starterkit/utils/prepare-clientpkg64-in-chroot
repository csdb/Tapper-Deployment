#! /bin/bash

set -x

export TAPPERFROMGIT=1 # default in OSRC, we only call that script to get bleeding edge
PYTHONPREFIX=/opt/tapper/python

# ===========================================================

# currently we rely Perl already built in baseimage

if false ; then
    # for parallel builds
    export CPUCOUNT=`cat /proc/cpuinfo | grep vendor_id | wc -l`

    # Install Perl
    cd /tmp
    export PERLVERSION=5.12.3
    export PERLBREW_ROOT=/opt/tapper/perl
    mkdir -p $PERLBREW_ROOT
    curl -LO http://xrl.us/perlbrew
    chmod +x perlbrew
    ./perlbrew install
    /opt/tapper/perl/bin/perlbrew init
    echo ". /opt/tapper/perl/etc/bashrc" >> $HOME/.bashrc
    . /opt/tapper/perl/etc/bashrc
    perlbrew install -j ${CPUCOUNT} perl-${PERLVERSION}
    perlbrew switch perl-${PERLVERSION}

    # CPAN config
    cp /tmp/tapper-starterkit/misc/CPAN-Config.pm /opt/tapper/perl/perls/perl-${PERLVERSION}/lib/${PERLVERSION}/CPAN/Config.pm
    export TWMC_TEST_PORT=9876
    export PERL_AUTOINSTALL="--defaultdeps"
    export TEST_JOBS=${CPUCOUNT}
    export CPAN=/opt/tapper/perl/perls/current/bin/cpan
    echo "reload index" | $CPAN
    $CPAN LWP
    $CPAN Expect
fi

# ===========================================================

# again, because above is deactivated
export CPUCOUNT=`cat /proc/cpuinfo | grep vendor_id | wc -l`
export PERLVERSION=5.12.3
export PERLBREW_ROOT=/opt/tapper/perl
export TWMC_TEST_PORT=9876
export PERL_AUTOINSTALL="--defaultdeps"
export TEST_JOBS=${CPUCOUNT}
export CPAN=/opt/tapper/perl/perls/current/bin/cpan

TAPPERMODULES="Tapper::PRC Tapper::Installer Tapper::TestSuite::AutoTest Tapper::TestSuite::HWTrack"
# build from CPAN (which solves dependencies)
# and optionally from git on top
for module in $TAPPERMODULES ; do
    $CPAN $module
done
if [ "x1" == "x$TAPPERFROMGIT" ] ; then
    for module in $TAPPERMODULES ; do
        dist=$(echo $module | sed -e 's/::/-/g')
        cd /tmp/
        rm -fr $dist
        git clone git://wotan/$dist
        cd $dist
        perl Makefile.PL
        make
        make test
        make install
    done
fi

# ==================== Python ====================

/prepare-optpython

# ==================== Python test suites ====================

for pkg in `find /pythonrepo/ -type f` ; do
    ${PYTHONPREFIX}/bin/easy_install $pkg
done
